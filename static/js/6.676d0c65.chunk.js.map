{"version":3,"sources":["components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelService.js","hooks/http.hook.js","components/skeleton/Skeleton.js","utils/setContent.js","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.js","components/pages/SinglePage.js"],"names":["ErrorMessage","style","display","width","height","objectFit","margin","src","img","alt","useMarvelService","useState","processState","setProcessState","request","useCallback","url","a","method","body","headers","fetch","response","ok","Error","status","json","data","clearError","useHttp","_apiBase","_apiKey","process","_baseOffset","getAllCharacters","offset","res","results","map","_transformCharacter","getCharacter","id","getAllComics","_transformComics","getComic","getCharByName","name","char","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","splice","comic","title","pageCount","language","textObjects","price","prices","Skeleton","className","setContent","Component","Spinner","AppBanner","avengers","avengersLogo","SinglePage","dataType","useParams","setData","useEffect","updateData","then","onDataLoaded","console","log"],"mappings":"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","file":"static/js/6.676d0c65.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif';\r\n\r\nconst ErrorMessage = () => {\r\n    return (\r\n        <img style={{ display: 'block', width: '250px', height: '250px', objectFit: 'contain', margin: '0 auto'}} src={img} alt='Error'/>\r\n    )\r\n}\r\n\r\nexport default ErrorMessage;","import { useHttp } from \"../hooks/http.hook\";\r\n\r\nconst useMarvelService = () => {\r\n    const {request, clearError, processState, setProcessState} = useHttp();\r\n\r\n    const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n    const _apiKey = process.env.REACT_APP_API_KEY;\r\n    const _baseOffset = 210;\r\n\r\n    const getAllCharacters = async (offset = _baseOffset) => {\r\n        const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\r\n        return res.data.results.map(_transformCharacter);\r\n    }\r\n\r\n    const getCharacter = async (id) => {\r\n        const res = await request(`${_apiBase}characters/${id}?&${_apiKey}`);\r\n        return _transformCharacter(res.data.results[0]);\r\n    }\r\n\r\n    const getAllComics = async (offset = _baseOffset) => {\r\n        const res = await request(`${_apiBase}comics?limit=8&offset=${offset}&${_apiKey}`);\r\n        return res.data.results.map(_transformComics);\r\n    }\r\n\r\n    const getComic = async (id) => {\r\n\t\tconst res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\r\n\t\treturn _transformComics(res.data.results[0]);\r\n\t};\r\n\r\n    const getCharByName = async (name = 'Thor') => {\r\n        const res = await request(`${_apiBase}characters?name=${name}&${_apiKey}`);\r\n\t\treturn res.data.results.map(_transformCharacter);\r\n    }\r\n\r\n    const _transformCharacter = (char) => {\r\n        return {\r\n            id: char.id,\r\n            name: char.name,\r\n            description: !char.description ? \"Unfortunately there is no description for this character\" : char.description.slice(0, 210),\r\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n            homepage: char.urls[0].url,\r\n            wiki: char.urls[1].url,\r\n            comics: char.comics.items.splice(0, 10)\r\n        }\r\n    }\r\n\r\n    const _transformComics = comic => {\r\n        return {\r\n            id: comic.id,\r\n            title: comic.title,\r\n            description: comic.description || \"There is no description\",\r\n\t\t\tpageCount: comic.pageCount ? `${comic.pageCount} p.` : \"No information about the number of pages\",\r\n            language: comic.textObjects[0]?.language || \"en-us\",\r\n            price: comic.prices[0].price ? `${comic.prices[0].price}$` : \"not available\",\r\n            thumbnail: `${comic.thumbnail.path}.${comic.thumbnail.extension}`\r\n        }\r\n\r\n    }\r\n\r\n    return {clearError,\r\n            processState,\r\n            setProcessState,\r\n            getAllCharacters,\r\n            getCharacter,\r\n            getCharByName,\r\n            getAllComics,\r\n            getComic};\r\n}\r\n\r\nexport default useMarvelService;","import {useState, useCallback} from \"react\";\r\n\r\nexport const useHttp = () => {\r\n    const [processState, setProcessState] = useState('waiting');\r\n\r\n    const request = useCallback(\r\n        async (url, method = 'GET', body = null, headers = {'Content-Type': 'aplication/json'}) => {\r\n\r\n            setProcessState('loading');\r\n\r\n            try {\r\n                const response = await fetch(url, {method, body, headers});\r\n\r\n                if(!response.ok) {\r\n                    throw new Error(`Could not fetch ${url}, status: ${response.status}`);\r\n                }\r\n\r\n                const data = await response.json();\r\n\r\n                return data;\r\n\r\n            } catch(e) {\r\n                setProcessState('error');\r\n                throw e;\r\n            }\r\n    }, [])\r\n\r\n    const clearError = useCallback(() => {\r\n        setProcessState('loading');\r\n    }, []);\r\n\r\n    return {request, clearError, processState, setProcessState};\r\n}","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import Spinner from '../components/spinner/Spinner';\r\nimport ErrorMessage from '../components/errorMessage/ErrorMessage';\r\nimport Skeleton from '../components/skeleton/Skeleton';\r\n\r\nconst setContent = (process, Component, data) => {\r\n    switch (process) {\r\n        case 'waiting': \r\n            return <Skeleton/>;\r\n        case 'loading':\r\n            return <Spinner/>;\r\n        case 'confirmed':\r\n            return <Component data={data}/>\r\n        case 'error':\r\n            return <ErrorMessage/>;\r\n        default:\r\n            throw new Error('Unexpected process state');\r\n    }\r\n}\r\n\r\nexport default setContent;","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","import { useParams } from 'react-router-dom';\r\nimport { useState, useEffect } from 'react';\r\n\r\nimport useMarvelService from '../../services/MarvelService';\r\nimport setContent from '../../utils/setContent';\r\nimport AppBanner from \"../appBanner/AppBanner\";\r\n\r\n\r\nconst SinglePage = ({Component, dataType}) => {\r\n    const {id} = useParams();\r\n    const [data, setData] = useState(null);\r\n\r\n    const {getComic, getCharacter, clearError, processState, setProcessState} = useMarvelService();\r\n\r\n    useEffect(() => {\r\n        updateData();\r\n        // eslint-disable-next-line\r\n    }, [id])\r\n\r\n    const updateData = () => {\r\n        clearError();\r\n\r\n        switch (dataType) {\r\n            case 'comic':\r\n                getComic(id).then(onDataLoaded).then(() => setProcessState('confirmed'));\r\n                break;\r\n            case 'character':\r\n                getCharacter(id).then(onDataLoaded).then(() => setProcessState('confirmed'));\r\n                break;\r\n            default:\r\n                console.log('no data');\r\n        }\r\n    }\r\n\r\n    const onDataLoaded = (data) => {\r\n        setData(data);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <AppBanner/>\r\n            {setContent(processState, Component, data)}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SinglePage;"],"sourceRoot":""}